{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trond\\\\Documents\\\\Unity\\\\Naples\\\\src\\\\components\\\\MergeTestComponent.tsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect, useContext } from 'react';\nimport ImageScrollerComponent from './ImageScrollerComponent';\nimport BackgroundImageModule from \"../modules/BackgroundImageModule\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\nimport mergeImages from 'merge-images';\n\n/*use state initierer et tomt array av typen IBackgroundImage\r\nsetBackgroundImages og backgroundImages er koblet sammen, slik at når setBackgroundImages blir kjørt\r\nså oppdateres verdiene i backgroundImages*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MergeTestComponents = () => {\n  _s();\n  const [backgroundImages, setBackgroundImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const capturedImage = useContext(CapturedImageContext);\n  const [mergedImage, setMergedImage] = useState(null);\n\n  // Useffect kjører setBackgroundImagesFromModule når endringer gjøres i bakgrunnen\n  useEffect(() => {\n    setBackgroundImagesFromModule();\n  }, []);\n\n  /*Henter backgroundimages fra modul og legger de i images, setBackgroundImages settes til images\r\n  setSelectedImage settes til images med index 2*/\n  const setBackgroundImagesFromModule = () => {\n    const images = BackgroundImageModule.getAll();\n    setBackgroundImages(images);\n    setSelectedImage(images[0]);\n  };\n  useEffect(() => {\n    if (selectedImage) {\n      mergeImages([require(`../assets/images/josef.`), require(`../assets/images/${selectedImage.name}`)]).then(b64 => setMergedImage(b64)).catch(error => console.error(error));\n    }\n  }, [selectedImage]);\n  const handleImageClick = image => {\n    setSelectedImage(image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ImageScrollerComponent, {\n      images: backgroundImages,\n      selectedImage: selectedImage,\n      onImageClick: handleImageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Captured Image \", capturedImage === null || capturedImage === void 0 ? void 0 : capturedImage.capturedImage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), mergedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mergedImage,\n      alt: \"Merged images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(`../assets/images/${selectedImage.name}`),\n      alt: selectedImage.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MergeTestComponents, \"k2SzwS+QKwqD/gxCxGT8+e61hJs=\");\n_c = MergeTestComponents;\nexport default MergeTestComponents;\nvar _c;\n$RefreshReg$(_c, \"MergeTestComponents\");","map":{"version":3,"names":["useState","useEffect","useContext","ImageScrollerComponent","BackgroundImageModule","CapturedImageContext","mergeImages","jsxDEV","_jsxDEV","MergeTestComponents","_s","backgroundImages","setBackgroundImages","selectedImage","setSelectedImage","capturedImage","mergedImage","setMergedImage","setBackgroundImagesFromModule","images","getAll","require","name","then","b64","catch","error","console","handleImageClick","image","children","onImageClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/trond/Documents/Unity/Naples/src/components/MergeTestComponent.tsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport IBackgroundImage from \"../interfaces/IBackgroundImage\";\r\nimport BackgroundImageItem from \"./BackgroundImageItem\";\r\nimport ImageScrollerComponent from './ImageScrollerComponent';\r\nimport BackgroundImageModule from \"../modules/BackgroundImageModule\";\r\nimport ICapturedImage from '../interfaces/ICapturedImage';\r\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\r\nimport mergeImages from 'merge-images';  \r\n\r\n/*use state initierer et tomt array av typen IBackgroundImage\r\nsetBackgroundImages og backgroundImages er koblet sammen, slik at når setBackgroundImages blir kjørt\r\nså oppdateres verdiene i backgroundImages*/\r\nconst MergeTestComponents = () => {\r\n  const [backgroundImages, setBackgroundImages] = useState<IBackgroundImage[]>([]);\r\n  const [selectedImage, setSelectedImage] = useState<IBackgroundImage | null>(null);\r\n  const capturedImage = useContext(CapturedImageContext);\r\n  const [mergedImage, setMergedImage] = useState<string | null>(null);\r\n\r\n  // Useffect kjører setBackgroundImagesFromModule når endringer gjøres i bakgrunnen\r\n  useEffect(() => {\r\n    setBackgroundImagesFromModule();\r\n  }, []);\r\n \r\n  /*Henter backgroundimages fra modul og legger de i images, setBackgroundImages settes til images\r\n  setSelectedImage settes til images med index 2*/\r\n  const setBackgroundImagesFromModule = () => {\r\n    const images = BackgroundImageModule.getAll();\r\n    setBackgroundImages(images);\r\n    setSelectedImage(images[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedImage) {\r\n      mergeImages([\r\n        require(`../assets/images/josef.`),\r\n        require(`../assets/images/${selectedImage.name}`)\r\n      ])\r\n        .then((b64) => setMergedImage(b64))\r\n        .catch((error) => console.error(error));\r\n    }\r\n  }, [selectedImage]);\r\n\r\n  const handleImageClick = (image: IBackgroundImage) => {\r\n    setSelectedImage(image);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageScrollerComponent\r\n        images={backgroundImages}\r\n        selectedImage={selectedImage}\r\n        onImageClick={handleImageClick}\r\n      />\r\n      <h1>Captured Image {capturedImage?.capturedImage}</h1>\r\n      {mergedImage && <img src={mergedImage} alt=\"Merged images\" />}\r\n      {selectedImage && (\r\n        <img src={require(`../assets/images/${selectedImage.name}`)} alt={selectedImage.name} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MergeTestComponents;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}