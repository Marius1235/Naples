{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const findLogitechCamera = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const logitechCamera = devices.find(device => device.kind === 'videoinput' && device.label.includes('C920'));\n        return logitechCamera || null;\n      } catch (error) {\n        console.error('Error enumerating devices:', error);\n        return null;\n      }\n    };\n    const startCamera = async () => {\n      const logitechCamera = await findLogitechCamera();\n      if (logitechCamera) {\n        const constraints = {\n          video: {\n            deviceId: logitechCamera.deviceId\n          }\n        };\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }).catch(error => {\n          console.error('Error accessing camera:', error);\n        });\n      } else {\n        console.error('Logitech camera not found.');\n      }\n    };\n    startCamera();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    muted: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(CameraComponent, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = CameraComponent;\nconst takePicture = () => {\n  if (videoRef.current && canvasRef.current) {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    // Set the canvas dimensions to match the video stream\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current video frame onto the canvas\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert the canvas image to a data URL\n    const dataUrl = canvas.toDataURL('image/png');\n\n    // Save the image as a file\n    saveAs(dataUrl, 'webcam_picture.png');\n  }\n};\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","findLogitechCamera","devices","navigator","mediaDevices","enumerateDevices","logitechCamera","find","device","kind","label","includes","error","console","startCamera","constraints","video","deviceId","getUserMedia","then","stream","current","srcObject","catch","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","takePicture","canvasRef","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","dataUrl","toDataURL","saveAs","$RefreshReg$"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\n\nconst CameraComponent: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const findLogitechCamera = async (): Promise<MediaDeviceInfo | null> => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const logitechCamera = devices.find(\n          (device) => device.kind === 'videoinput' && device.label.includes('C920')\n        );\n        return logitechCamera || null;\n      } catch (error) {\n        console.error('Error enumerating devices:', error);\n        return null;\n      }\n    };\n\n    const startCamera = async (): Promise<void> => {\n      const logitechCamera = await findLogitechCamera();\n      if (logitechCamera) {\n        const constraints: MediaStreamConstraints = {\n          video: { deviceId: logitechCamera.deviceId },\n        };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n          .then((stream) => {\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          })\n          .catch((error) => {\n            console.error('Error accessing camera:', error);\n          });\n      } else {\n        console.error('Logitech camera not found.');\n      }\n    };\n\n    startCamera();\n  }, []);\n\n  return <video ref={videoRef} autoPlay muted />;\n\n  };\n\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      // Set the canvas dimensions to match the video stream\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw the current video frame onto the canvas\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas image to a data URL\n      const dataUrl = canvas.toDataURL('image/png');\n\n      // Save the image as a file\n      saveAs(dataUrl, 'webcam_picture.png');\n    }\n  };\n\nexport default CameraComponent;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGN,MAAM,CAAmB,IAAI,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAA6C;MACtE,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,gBAAgB,CAAC,CAAC;QAC/D,MAAMC,cAAc,GAAGJ,OAAO,CAACK,IAAI,CAChCC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAAY,IAAID,MAAM,CAACE,KAAK,CAACC,QAAQ,CAAC,MAAM,CAC1E,CAAC;QACD,OAAOL,cAAc,IAAI,IAAI;MAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAA2B;MAC7C,MAAMR,cAAc,GAAG,MAAML,kBAAkB,CAAC,CAAC;MACjD,IAAIK,cAAc,EAAE;QAClB,MAAMS,WAAmC,GAAG;UAC1CC,KAAK,EAAE;YAAEC,QAAQ,EAAEX,cAAc,CAACW;UAAS;QAC7C,CAAC;QAEDd,SAAS,CAACC,YAAY,CAACc,YAAY,CAACH,WAAW,CAAC,CAC7CI,IAAI,CAAEC,MAAM,IAAK;UAChB,IAAIpB,QAAQ,CAACqB,OAAO,EAAE;YACpBrB,QAAQ,CAACqB,OAAO,CAACC,SAAS,GAAGF,MAAM;UACrC;QACF,CAAC,CAAC,CACDG,KAAK,CAAEX,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACN,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IAEDE,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjB,OAAA;IAAO2B,GAAG,EAAExB,QAAS;IAACyB,QAAQ;IAACC,KAAK;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE9C,CAAC;AAAC/B,EAAA,CA3CED,eAAyB;AAAAiC,EAAA,GAAzBjC,eAAyB;AA6C7B,MAAMkC,WAAW,GAAGA,CAAA,KAAM;EACxB,IAAIhC,QAAQ,CAACqB,OAAO,IAAIY,SAAS,CAACZ,OAAO,EAAE;IACzC,MAAML,KAAK,GAAGhB,QAAQ,CAACqB,OAAO;IAC9B,MAAMa,MAAM,GAAGD,SAAS,CAACZ,OAAO;;IAEhC;IACAa,MAAM,CAACC,KAAK,GAAGnB,KAAK,CAACoB,UAAU;IAC/BF,MAAM,CAACG,MAAM,GAAGrB,KAAK,CAACsB,WAAW;;IAEjC;IACA,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,SAAS,CAACzB,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEkB,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,MAAM,CAAC;;IAE3D;IACA,MAAMK,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;;IAE7C;IACAC,MAAM,CAACF,OAAO,EAAE,oBAAoB,CAAC;EACvC;AACF,CAAC;AAEH,eAAe5C,eAAe;AAAC,IAAAiC,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}