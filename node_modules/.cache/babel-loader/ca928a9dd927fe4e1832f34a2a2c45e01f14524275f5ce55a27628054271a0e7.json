{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  useEffect(() => {\n    const findLogitechCamera = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const logitechCamera = devices.find(device => device.kind === 'videoinput' && device.label.includes('C920'));\n        return logitechCamera || null;\n      } catch (error) {\n        console.error('Error enumerating devices:', error);\n        return null;\n      }\n    };\n    const startCamera = async () => {\n      const logitechCamera = await findLogitechCamera();\n      if (logitechCamera) {\n        const constraints = {\n          video: {\n            deviceId: logitechCamera.deviceId\n          }\n        };\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }).catch(error => {\n          console.error('Error accessing camera:', error);\n        });\n      } else {\n        console.error('Logitech camera not found.');\n      }\n    };\n    startCamera();\n  }, []);\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      // Set the canvas dimensions to match the video stream\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw the current video frame onto the canvas\n      const context = canvas.getContext('2d');\n      context === null || context === void 0 ? void 0 : context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas image to a data URL\n      const dataUrl = canvas.toDataURL('image/png');\n\n      // Update the state with the captured image\n      setCapturedImage(dataUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePicture,\n      children: \"Take Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: capturedImage,\n      alt: \"Captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraComponent, \"MPxgW445OvD/VRaCvPpOMw5ybyI=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["useRef","useEffect","useState","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","canvasRef","capturedImage","setCapturedImage","findLogitechCamera","devices","navigator","mediaDevices","enumerateDevices","logitechCamera","find","device","kind","label","includes","error","console","startCamera","constraints","video","deviceId","getUserMedia","then","stream","current","srcObject","catch","takePicture","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","dataUrl","toDataURL","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","display","_c","$RefreshReg$"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport { PictureContext } from \"../contexts/PictureContext\";\n\nconst CameraComponent: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n\n  useEffect(() => {\n    const findLogitechCamera = async (): Promise<MediaDeviceInfo | null> => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const logitechCamera = devices.find(\n          (device) => device.kind === 'videoinput' && device.label.includes('C920')\n        );\n        return logitechCamera || null;\n      } catch (error) {\n        console.error('Error enumerating devices:', error);\n        return null;\n      }\n    };\n\n    const startCamera = async (): Promise<void> => {\n      const logitechCamera = await findLogitechCamera();\n      if (logitechCamera) {\n        const constraints: MediaStreamConstraints = {\n          video: { deviceId: logitechCamera.deviceId },\n        };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n          .then((stream) => {\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          })\n          .catch((error) => {\n            console.error('Error accessing camera:', error);\n          });\n      } else {\n        console.error('Logitech camera not found.');\n      }\n    };\n\n    startCamera();\n  }, []);\n\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      // Set the canvas dimensions to match the video stream\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw the current video frame onto the canvas\n      const context = canvas.getContext('2d');\n      context?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas image to a data URL\n      const dataUrl = canvas.toDataURL('image/png');\n\n      // Update the state with the captured image\n      setCapturedImage(dataUrl);\n    }\n  };\n\n  return (\n    <div>\n      <video ref={videoRef} autoPlay muted />\n      <button onClick={takePicture}>Take Picture</button>\n      {capturedImage && <img src={capturedImage} alt=\"Captured\" />}\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n};\n\nexport default CameraComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}