{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/src/components/CameraComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cameraComponent = () => {\n  _s();\n  navigator.mediaDevices.getUserMedia({\n    video: true\n  }).then(stream => {\n    // Access to camera successful, stream contains the video data\n  }).catch(error => {\n    // Access to camera failed or permission denied\n    console.error('Error accessing camera:', error);\n  });\n  const videoRef = useRef(null);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(error => {\n      console.error('Error accessing camera:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    muted: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(cameraComponent, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\nexport default cameraComponent;","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","cameraComponent","_s","navigator","mediaDevices","getUserMedia","video","then","stream","catch","error","console","videoRef","current","srcObject","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/src/components/CameraComponent.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst cameraComponent = () => {\n  navigator.mediaDevices.getUserMedia({ video: true })\n  .then((stream: MediaStream) => {\n    // Access to camera successful, stream contains the video data\n  })\n  .catch((error: Error) => {\n    // Access to camera failed or permission denied\n    console.error('Error accessing camera:', error);\n  });\n\n  \n    const videoRef = useRef<HTMLVideoElement>(null);\n  \n    useEffect(() => {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then((stream) => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        })\n        .catch((error) => {\n          console.error('Error accessing camera:', error);\n        });\n    }, []);\n  \n    return <video ref={videoRef} autoPlay muted />;\n  \n  \n}\n\nexport default cameraComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5BC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC,CACnDC,IAAI,CAAEC,MAAmB,IAAK;IAC7B;EAAA,CACD,CAAC,CACDC,KAAK,CAAEC,KAAY,IAAK;IACvB;IACAC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD,CAAC,CAAC;EAGA,MAAME,QAAQ,GAAGd,MAAM,CAAmB,IAAI,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACdM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CACjDC,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAII,QAAQ,CAACC,OAAO,EAAE;QACpBD,QAAQ,CAACC,OAAO,CAACC,SAAS,GAAGN,MAAM;MACrC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA;IAAOe,GAAG,EAAEH,QAAS;IAACI,QAAQ;IAACC,KAAK;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAGlD,CAAC;AAAAnB,EAAA,CA5BKD,eAAe;AA8BrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}