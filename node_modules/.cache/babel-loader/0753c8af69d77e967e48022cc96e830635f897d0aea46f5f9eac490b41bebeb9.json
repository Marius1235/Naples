{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const capturedImageContext = useContext(CapturedImageContext);\n  const [countdown, setCountdown] = useState(5);\n  const [isCounting, setIsCounting] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCountdown(prevCountdown => prevCountdown - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (countdown === 0) {\n      takePicture();\n      window.location.href;\n    }\n  }, [countdown]);\n  const startCountdown = () => {\n    setCountdown(5);\n    setIsCounting(true);\n  };\n  useEffect(() => {\n    const findCamera = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const camera = devices.find(device => device.kind === \"videoinput\" && device.label.includes(\"C920\"));\n        return camera || null;\n      } catch (error) {\n        console.error(\"Error enumerating devices:\", error);\n        return null;\n      }\n    };\n    const startCamera = async () => {\n      const camera = await findCamera();\n      if (camera) {\n        const constraints = {\n          video: {\n            deviceId: camera.deviceId\n          }\n        };\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }).catch(error => {\n          console.error(\"Error accessing camera:\", error);\n        });\n      } else {\n        console.error(\"Camera not found.\");\n      }\n    };\n    startCamera();\n  }, []);\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext(\"2d\");\n      context === null || context === void 0 ? void 0 : context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const dataUrl = canvas.toDataURL(\"image/png\");\n      if (capturedImageContext) {\n        capturedImageContext.setCapturedImage(dataUrl);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), !isCounting && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCountdown,\n      children: \"Start Countdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this), countdown > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Countdown: \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isCounting ? \"Countdown finished!\" : \"Click the button to start the countdown.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraComponent, \"PYHwCaljr73nOPmjctUDL7fw2X0=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["useRef","useEffect","useState","useContext","CapturedImageContext","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","canvasRef","capturedImageContext","countdown","setCountdown","isCounting","setIsCounting","timer","setInterval","prevCountdown","clearInterval","takePicture","window","location","href","startCountdown","findCamera","devices","navigator","mediaDevices","enumerateDevices","camera","find","device","kind","label","includes","error","console","startCamera","constraints","video","deviceId","getUserMedia","then","stream","current","srcObject","catch","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","dataUrl","toDataURL","setCapturedImage","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onClick","_c","$RefreshReg$"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx"],"sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\n\nconst CameraComponent: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const capturedImageContext = useContext(CapturedImageContext);\n\n  const [countdown, setCountdown] = useState(5);\n  const [isCounting, setIsCounting] = useState(false);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCountdown((prevCountdown) => prevCountdown - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    if (countdown === 0) {\n      takePicture();\n      window.location.href\n    }\n  }, [countdown]);\n\n  const startCountdown = () => {\n    setCountdown(5); \n    setIsCounting(true); \n  };\n\n  useEffect(() => {\n    const findCamera = async (): Promise<MediaDeviceInfo | null> => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const camera = devices.find(\n          (device) =>\n            device.kind === \"videoinput\" && device.label.includes(\"C920\")\n        );\n        return camera || null;\n      } catch (error) {\n        console.error(\"Error enumerating devices:\", error);\n        return null;\n      }\n    };\n\n    const startCamera = async (): Promise<void> => {\n      const camera = await findCamera();\n      if (camera) {\n        const constraints: MediaStreamConstraints = {\n          video: { deviceId: camera.deviceId },\n        };\n\n        navigator.mediaDevices\n          .getUserMedia(constraints)\n          .then((stream) => {\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error accessing camera:\", error);\n          });\n      } else {\n        console.error(\"Camera not found.\");\n      }\n    };\n\n    startCamera();\n  }, []);\n\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      const context = canvas.getContext(\"2d\");\n      context?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      const dataUrl = canvas.toDataURL(\"image/png\");\n\n      if (capturedImageContext) {\n        capturedImageContext.setCapturedImage(dataUrl);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <video ref={videoRef} autoPlay muted />\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\n      {!isCounting && <button onClick={startCountdown}>Start Countdown</button>}\n      {countdown > 0 ? (\n        <p>Countdown: {countdown}</p>\n      ) : (\n        <p>\n          {isCounting\n            ? \"Countdown finished!\"\n            : \"Click the button to start the countdown.\"}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CameraComponent;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC/D,SAASC,oBAAoB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGT,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMU,SAAS,GAAGV,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMW,oBAAoB,GAAGR,UAAU,CAACC,oBAAoB,CAAC;EAE7D,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BJ,YAAY,CAAEK,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;IACpD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,KAAK,CAAC,EAAE;MACnBQ,WAAW,CAAC,CAAC;MACbC,MAAM,CAACC,QAAQ,CAACC,IAAI;IACtB;EACF,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BX,YAAY,CAAC,CAAC,CAAC;IACfE,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAA6C;MAC9D,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,gBAAgB,CAAC,CAAC;QAC/D,MAAMC,MAAM,GAAGJ,OAAO,CAACK,IAAI,CACxBC,MAAM,IACLA,MAAM,CAACC,IAAI,KAAK,YAAY,IAAID,MAAM,CAACE,KAAK,CAACC,QAAQ,CAAC,MAAM,CAChE,CAAC;QACD,OAAOL,MAAM,IAAI,IAAI;MACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAA2B;MAC7C,MAAMR,MAAM,GAAG,MAAML,UAAU,CAAC,CAAC;MACjC,IAAIK,MAAM,EAAE;QACV,MAAMS,WAAmC,GAAG;UAC1CC,KAAK,EAAE;YAAEC,QAAQ,EAAEX,MAAM,CAACW;UAAS;QACrC,CAAC;QAEDd,SAAS,CAACC,YAAY,CACnBc,YAAY,CAACH,WAAW,CAAC,CACzBI,IAAI,CAAEC,MAAM,IAAK;UAChB,IAAInC,QAAQ,CAACoC,OAAO,EAAE;YACpBpC,QAAQ,CAACoC,OAAO,CAACC,SAAS,GAAGF,MAAM;UACrC;QACF,CAAC,CAAC,CACDG,KAAK,CAAEX,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACN,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC;IAEDE,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMlB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIX,QAAQ,CAACoC,OAAO,IAAInC,SAAS,CAACmC,OAAO,EAAE;MACzC,MAAML,KAAK,GAAG/B,QAAQ,CAACoC,OAAO;MAC9B,MAAMG,MAAM,GAAGtC,SAAS,CAACmC,OAAO;MAEhCG,MAAM,CAACC,KAAK,GAAGT,KAAK,CAACU,UAAU;MAC/BF,MAAM,CAACG,MAAM,GAAGX,KAAK,CAACY,WAAW;MAEjC,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,SAAS,CAACf,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEQ,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,MAAM,CAAC;MAE5D,MAAMK,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;MAE7C,IAAI9C,oBAAoB,EAAE;QACxBA,oBAAoB,CAAC+C,gBAAgB,CAACF,OAAO,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACElD,OAAA;IAAAqD,QAAA,gBACErD,OAAA;MAAOsD,GAAG,EAAEnD,QAAS;MAACoD,QAAQ;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC5D,OAAA;MAAQsD,GAAG,EAAElD,SAAU;MAACyD,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrD,CAACpD,UAAU,iBAAIR,OAAA;MAAQ+D,OAAO,EAAE7C,cAAe;MAAAmC,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxEtD,SAAS,GAAG,CAAC,gBACZN,OAAA;MAAAqD,QAAA,GAAG,aAAW,EAAC/C,SAAS;IAAA;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE7B5D,OAAA;MAAAqD,QAAA,EACG7C,UAAU,GACP,qBAAqB,GACrB;IAA0C;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAvGID,eAAyB;AAAA+D,EAAA,GAAzB/D,eAAyB;AAyG/B,eAAeA,eAAe;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}