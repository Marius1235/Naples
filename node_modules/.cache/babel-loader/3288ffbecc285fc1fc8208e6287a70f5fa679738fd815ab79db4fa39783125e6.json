{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/BackgroundImageList.tsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect, useContext } from 'react';\nimport ImageScrollerComponent from './ImageScrollerComponent';\nimport BackgroundImageModule from \"../modules/BackgroundImageModule\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\n\n/*use state initierer et tomt array av typen IBackgroundImage\nsetBackgroundImages og backgroundImages er koblet sammen, slik at når setBackgroundImages blir kjørt\nså oppdateres verdiene i backgroundImages*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundImageList = () => {\n  _s();\n  const [backgroundImages, setBackgroundImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const capturedImage = useContext(CapturedImageContext);\n  const [overlayImage, setOverlayImage] = useState(null);\n\n  // Useffect kjører setBackgroundImagesFromModule når endringer gjøres i bakgrunnen\n  useEffect(() => {\n    setBackgroundImagesFromModule();\n  }, []);\n\n  /*Henter backgroundimages fra modul og legger de i images, setBackgroundImages settes til images\n  setSelectedImage settes til images med index 2*/\n  const setBackgroundImagesFromModule = () => {\n    const images = BackgroundImageModule.getAll();\n    setBackgroundImages(images);\n    setSelectedImage(images[1]);\n  };\n  const handleImageClick = image => {\n    setSelectedImage(image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ImageScrollerComponent, {\n      images: backgroundImages,\n      selectedImage: selectedImage,\n      onImageClick: handleImageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Captured Image: \", capturedImage === null || capturedImage === void 0 ? void 0 : capturedImage.capturedImage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundImageList, \"1MXfPHMwPGmSdWCYfR1B4vLoe70=\");\n_c = BackgroundImageList;\nexport default BackgroundImageList;\nvar _c;\n$RefreshReg$(_c, \"BackgroundImageList\");","map":{"version":3,"names":["useState","useEffect","useContext","ImageScrollerComponent","BackgroundImageModule","CapturedImageContext","jsxDEV","_jsxDEV","BackgroundImageList","_s","backgroundImages","setBackgroundImages","selectedImage","setSelectedImage","capturedImage","overlayImage","setOverlayImage","setBackgroundImagesFromModule","images","getAll","handleImageClick","image","children","onImageClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/BackgroundImageList.tsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport IBackgroundImage from \"../interfaces/IBackgroundImage\";\nimport BackgroundImageItem from \"./BackgroundImageItem\";\nimport ImageScrollerComponent from './ImageScrollerComponent';\nimport BackgroundImageModule from \"../modules/BackgroundImageModule\";\nimport ICapturedImage from '../interfaces/ICapturedImage';\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";  \n\n/*use state initierer et tomt array av typen IBackgroundImage\nsetBackgroundImages og backgroundImages er koblet sammen, slik at når setBackgroundImages blir kjørt\nså oppdateres verdiene i backgroundImages*/\nconst BackgroundImageList = () => {\n  const [backgroundImages, setBackgroundImages] = useState<IBackgroundImage[]>([]);\n  const [selectedImage, setSelectedImage] = useState<IBackgroundImage | null>(null);\n  const capturedImage = useContext(CapturedImageContext);\n  const [overlayImage, setOverlayImage] = useState<ICapturedImage | null> (null);\n\n  // Useffect kjører setBackgroundImagesFromModule når endringer gjøres i bakgrunnen\n  useEffect(() => {\n    setBackgroundImagesFromModule();\n  }, []);\n \n  /*Henter backgroundimages fra modul og legger de i images, setBackgroundImages settes til images\n  setSelectedImage settes til images med index 2*/\n  const setBackgroundImagesFromModule = () => {\n    const images = BackgroundImageModule.getAll();\n    setBackgroundImages(images);\n    setSelectedImage(images[1]);\n  };\n  \n  const handleImageClick = (image: IBackgroundImage) => {\n    setSelectedImage(image);\n  };  \n\n  return (\n    <div>\n              <ImageScrollerComponent\n              images={backgroundImages}\n              selectedImage={selectedImage}\n              onImageClick={handleImageClick}\n            />\n            <h1>Captured Image: {capturedImage?.capturedImage}</h1>        \n    </div>\n  );\n};\n\nexport default BackgroundImageList;"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAgB,OAAO;AAG/D,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,qBAAqB,MAAM,kCAAkC;AAEpE,SAASC,oBAAoB,QAAQ,kCAAkC;;AAEvE;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAqB,EAAE,CAAC;EAChF,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAA0B,IAAI,CAAC;EACjF,MAAMc,aAAa,GAAGZ,UAAU,CAACG,oBAAoB,CAAC;EACtD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAyB,IAAI,CAAC;;EAE9E;EACAC,SAAS,CAAC,MAAM;IACdgB,6BAA6B,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;EACE,MAAMA,6BAA6B,GAAGA,CAAA,KAAM;IAC1C,MAAMC,MAAM,GAAGd,qBAAqB,CAACe,MAAM,CAAC,CAAC;IAC7CR,mBAAmB,CAACO,MAAM,CAAC;IAC3BL,gBAAgB,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAME,gBAAgB,GAAIC,KAAuB,IAAK;IACpDR,gBAAgB,CAACQ,KAAK,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACUf,OAAA,CAACJ,sBAAsB;MACvBe,MAAM,EAAER,gBAAiB;MACzBE,aAAa,EAAEA,aAAc;MAC7BW,YAAY,EAAEH;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFpB,OAAA;MAAAe,QAAA,GAAI,kBAAgB,EAACR,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEA,aAAa;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,mBAAmB;AAAAoB,EAAA,GAAnBpB,mBAAmB;AAmCzB,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}