{"ast":null,"code":"var _jsxFileName = \"/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx\",\n  _s = $RefreshSig$();\n// Imports of necessary libraries and files\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Camera component for video streaming, picture taking and countdown.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = () => {\n  _s();\n  const videoRef = useRef(null); // useRef can be used to store a mutable value that does not cause a re-render when updated.\n  const canvasRef = useRef(null);\n  const capturedImageContext = useContext(CapturedImageContext);\n  const [countdown, setCountdown] = useState(5);\n  const [isCounting, setIsCounting] = useState(false);\n  const navigate = useNavigate();\n\n  // Starts a timer that counts down from 5 to 0.\n  useEffect(() => {\n    let timer;\n    if (isCounting) {\n      timer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isCounting]);\n\n  // When the countdown reaches 0, the takePicture function is called and the image is stored in a useState.\n  useEffect(() => {\n    if (countdown === 0 && isCounting) {\n      takePicture();\n      setTimeout(() => {\n        navigate(\"pictureChoice\");\n      }, 50);\n    }\n  }, [countdown, isCounting, capturedImageContext]);\n\n  // Runs when the button is clicked. Starts the timer which then initilizes the takePhoto function.\n  // After the takePhoto function is called, you then get redirected to the next page.\n  const startCountdown = () => {\n    setCountdown(5);\n    setIsCounting(true);\n  };\n  const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n  };\n\n  // Function that runs in the background on startup. Finds the selected external device on the computer.\n  useEffect(() => {\n    const isMac = window.navigator.platform.toUpperCase().includes('MAC');\n    const findCamera = async () => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const camera = devices.find(device => device.kind === \"videoinput\" && (isMac ? device.label.includes(\"C920\") : device.label.includes(\"C920\")));\n        return camera || null;\n      } catch (error) {\n        console.error(\"Error enumerating devices:\", error);\n        return null;\n      }\n    };\n\n    // If the camera is found the current media device will stream the video input onto the website.\n    const startCamera = async () => {\n      const camera = await findCamera();\n      if (camera) {\n        const constraints = {\n          video: {\n            deviceId: camera.deviceId\n          }\n        };\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }).catch(error => {\n          console.error(\"Error accessing camera:\", error);\n        });\n      } else {\n        console.error(\"Camera not found.\");\n      }\n    };\n    startCamera();\n  }, []);\n\n  // Takes a picture of the input and stores the image in a background running useState.\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext(\"2d\");\n      context === null || context === void 0 ? void 0 : context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const dataUrl = canvas.toDataURL(\"image/png\");\n      if (capturedImageContext) {\n        capturedImageContext.setCapturedImage(dataUrl);\n      }\n    }\n  };\n\n  // Returns the video input from the camera and a button that starts a countdown for the picture to be taken.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), isCounting ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Countdown: \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCountdown,\n      children: \"Start Countdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// Export for use in pages\n_s(CameraComponent, \"t1w4wJfH3MOMGINCXrJV+uiFx+4=\", false, function () {\n  return [useNavigate];\n});\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["useRef","useEffect","useState","useContext","CapturedImageContext","useNavigate","jsxDEV","_jsxDEV","CameraComponent","_s","videoRef","canvasRef","capturedImageContext","countdown","setCountdown","isCounting","setIsCounting","navigate","timer","setInterval","prevCountdown","clearInterval","takePicture","setTimeout","startCountdown","isMac","navigator","platform","toUpperCase","indexOf","window","includes","findCamera","devices","mediaDevices","enumerateDevices","camera","find","device","kind","label","error","console","startCamera","constraints","video","deviceId","getUserMedia","then","stream","current","srcObject","catch","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","dataUrl","toDataURL","setCapturedImage","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onClick","_c","$RefreshReg$"],"sources":["/Users/carldring/Desktop/Munchificator/munch-app/Naples/src/components/CameraComponent.tsx"],"sourcesContent":["// Imports of necessary libraries and files\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport { CapturedImageContext } from \"../contexts/CapturedImageContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Camera component for video streaming, picture taking and countdown.\nconst CameraComponent: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null); // useRef can be used to store a mutable value that does not cause a re-render when updated.\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const capturedImageContext = useContext(CapturedImageContext);\n  const [countdown, setCountdown] = useState(5);\n  const [isCounting, setIsCounting] = useState(false);\n  const navigate = useNavigate();\n\n  // Starts a timer that counts down from 5 to 0.\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (isCounting) {\n      timer = setInterval(() => {\n        setCountdown((prevCountdown) => prevCountdown - 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(timer);\n  }, [isCounting]);\n\n  // When the countdown reaches 0, the takePicture function is called and the image is stored in a useState.\n  useEffect(() => {\n    if (countdown === 0 && isCounting) {\n      takePicture();\n      setTimeout(() => {\n        navigate(\"pictureChoice\");\n      }, 50);\n    }\n  }, [countdown, isCounting, capturedImageContext]);\n\n  // Runs when the button is clicked. Starts the timer which then initilizes the takePhoto function.\n  // After the takePhoto function is called, you then get redirected to the next page.\n  const startCountdown = () => {\n    setCountdown(5);\n    setIsCounting(true);\n  };\n\n  const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n  };\n\n  // Function that runs in the background on startup. Finds the selected external device on the computer.\n  useEffect(() => {\n    const isMac = window.navigator.platform.toUpperCase().includes('MAC');\n    \n    const findCamera = async (): Promise<MediaDeviceInfo | null> => {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const camera = devices.find(\n          (device) =>\n            device.kind === \"videoinput\" &&\n            (isMac\n              ? device.label.includes(\"C920\")\n              : device.label.includes(\"C920\"))\n        );\n        return camera || null;\n      } catch (error) {\n        console.error(\"Error enumerating devices:\", error);\n        return null;\n      }\n    };\n\n    // If the camera is found the current media device will stream the video input onto the website.\n    const startCamera = async (): Promise<void> => {\n      const camera = await findCamera();\n      if (camera) {\n        const constraints: MediaStreamConstraints = {\n          video: { deviceId: camera.deviceId },\n        };\n\n        navigator.mediaDevices\n          .getUserMedia(constraints)\n          .then((stream) => {\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error accessing camera:\", error);\n          });\n      } else {\n        console.error(\"Camera not found.\");\n      }\n    };\n\n    startCamera();\n  }, []);\n\n  // Takes a picture of the input and stores the image in a background running useState.\n  const takePicture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      const context = canvas.getContext(\"2d\");\n      context?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      const dataUrl = canvas.toDataURL(\"image/png\");\n\n      if (capturedImageContext) {\n        capturedImageContext.setCapturedImage(dataUrl);\n      }\n    }\n  };\n\n  // Returns the video input from the camera and a button that starts a countdown for the picture to be taken.\n  return (\n    <div>\n      <video ref={videoRef} autoPlay muted />\n      <canvas ref={canvasRef} style={{ display: \"none\" }} />\n      {isCounting ? (\n        <p>Countdown: {countdown}</p>\n      ) : (\n        <button onClick={startCountdown}>Start Countdown</button>\n      )}\n    </div>\n  );\n};\n\n// Export for use in pages\nexport default CameraComponent;\n"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC/D,SAASC,oBAAoB,QAAQ,kCAAkC;AACvE,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGV,MAAM,CAAmB,IAAI,CAAC,CAAC,CAAC;EACjD,MAAMW,SAAS,GAAGX,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMY,oBAAoB,GAAGT,UAAU,CAACC,oBAAoB,CAAC;EAC7D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACAJ,SAAS,CAAC,MAAM;IACd,IAAIiB,KAAqB;IAEzB,IAAIH,UAAU,EAAE;MACdG,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBL,YAAY,CAAEM,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;MACpD,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;;EAEhB;EACAd,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,KAAK,CAAC,IAAIE,UAAU,EAAE;MACjCO,WAAW,CAAC,CAAC;MACbC,UAAU,CAAC,MAAM;QACfN,QAAQ,CAAC,eAAe,CAAC;MAC3B,CAAC,EAAE,EAAE,CAAC;IACR;EACF,CAAC,EAAE,CAACJ,SAAS,EAAEE,UAAU,EAAEH,oBAAoB,CAAC,CAAC;;EAEjD;EACA;EACA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BV,YAAY,CAAC,CAAC,CAAC;IACfE,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClB,OAAOC,SAAS,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;EAC7D,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACd,MAAMwB,KAAK,GAAGK,MAAM,CAACJ,SAAS,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACG,QAAQ,CAAC,KAAK,CAAC;IAErE,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA6C;MAC9D,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMP,SAAS,CAACQ,YAAY,CAACC,gBAAgB,CAAC,CAAC;QAC/D,MAAMC,MAAM,GAAGH,OAAO,CAACI,IAAI,CACxBC,MAAM,IACLA,MAAM,CAACC,IAAI,KAAK,YAAY,KAC3Bd,KAAK,GACFa,MAAM,CAACE,KAAK,CAACT,QAAQ,CAAC,MAAM,CAAC,GAC7BO,MAAM,CAACE,KAAK,CAACT,QAAQ,CAAC,MAAM,CAAC,CACrC,CAAC;QACD,OAAOK,MAAM,IAAI,IAAI;MACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,OAAO,IAAI;MACb;IACF,CAAC;;IAED;IACA,MAAME,WAAW,GAAG,MAAAA,CAAA,KAA2B;MAC7C,MAAMP,MAAM,GAAG,MAAMJ,UAAU,CAAC,CAAC;MACjC,IAAII,MAAM,EAAE;QACV,MAAMQ,WAAmC,GAAG;UAC1CC,KAAK,EAAE;YAAEC,QAAQ,EAAEV,MAAM,CAACU;UAAS;QACrC,CAAC;QAEDpB,SAAS,CAACQ,YAAY,CACnBa,YAAY,CAACH,WAAW,CAAC,CACzBI,IAAI,CAAEC,MAAM,IAAK;UAChB,IAAIvC,QAAQ,CAACwC,OAAO,EAAE;YACpBxC,QAAQ,CAACwC,OAAO,CAACC,SAAS,GAAGF,MAAM;UACrC;QACF,CAAC,CAAC,CACDG,KAAK,CAAEX,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACN,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC;IAEDE,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMrB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIZ,QAAQ,CAACwC,OAAO,IAAIvC,SAAS,CAACuC,OAAO,EAAE;MACzC,MAAML,KAAK,GAAGnC,QAAQ,CAACwC,OAAO;MAC9B,MAAMG,MAAM,GAAG1C,SAAS,CAACuC,OAAO;MAEhCG,MAAM,CAACC,KAAK,GAAGT,KAAK,CAACU,UAAU;MAC/BF,MAAM,CAACG,MAAM,GAAGX,KAAK,CAACY,WAAW;MAEjC,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,SAAS,CAACf,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEQ,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,MAAM,CAAC;MAE5D,MAAMK,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;MAE7C,IAAIlD,oBAAoB,EAAE;QACxBA,oBAAoB,CAACmD,gBAAgB,CAACF,OAAO,CAAC;MAChD;IACF;EACF,CAAC;;EAED;EACA,oBACEtD,OAAA;IAAAyD,QAAA,gBACEzD,OAAA;MAAO0D,GAAG,EAAEvD,QAAS;MAACwD,QAAQ;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvChE,OAAA;MAAQ0D,GAAG,EAAEtD,SAAU;MAAC6D,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrDxD,UAAU,gBACTR,OAAA;MAAAyD,QAAA,GAAG,aAAW,EAACnD,SAAS;IAAA;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE7BhE,OAAA;MAAQmE,OAAO,EAAElD,cAAe;MAAAwC,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAA9D,EAAA,CA3HMD,eAAyB;EAAA,QAMZH,WAAW;AAAA;AAAAsE,EAAA,GANxBnE,eAAyB;AA4H/B,eAAeA,eAAe;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}